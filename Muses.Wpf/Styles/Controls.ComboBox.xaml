<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:support="clr-namespace:Muses.Wpf.Controls.Support">

    <!-- 
    The drop-down toggle button style.
    -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="{Binding Source={x:Static SystemParameters.VerticalScrollBarWidth}}" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="PART_Border" 
                                Grid.ColumnSpan="2"
                                Background="{DynamicResource ControlColorBrush}"
                                BorderBrush="{DynamicResource BorderColorBrush}"
                                BorderThickness="1" />
                        <Border x:Name="PART_ArrowBorder"
                                Grid.Column="1"
                                Margin="1"
                                Background="{DynamicResource ControlColorBrush}"
                                BorderBrush="{DynamicResource BorderColorBrush}"
                                BorderThickness="1,0,0,0" />
                        <Path x:Name="PART_Arrow"
                              Grid.Column="1"     
                              Fill="{DynamicResource ForegroundColorBrush}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M1,3 L4,7 L7,3 L1,3 z" />
                    </Grid>
                    <!--
                    TODO: There is a _lot_ of repetition here. There must be a way to simplify
                    this...
                    -->
                    <ControlTemplate.Triggers>
                        <!-- 
                        Big fat assumption that the text box of the combo box
                        is the third child of the grid which contains the combo box
                        template.
                        -->
                        <DataTrigger Binding="{Binding Path=Children[2].IsFocused, RelativeSource={RelativeSource AncestorType=Grid}}" Value="True">
                            <Setter TargetName="PART_ArrowBorder" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource TextBoxFocusColorBrush}" />
                            <Setter TargetName="PART_Arrow" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=IsFocused}" Value="True">
                            <Setter TargetName="PART_ArrowBorder" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource TextBoxFocusColorBrush}" />
                            <Setter TargetName="PART_Arrow" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                        </DataTrigger>
                        <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                            <Setter TargetName="PART_ArrowBorder" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource TextBoxFocusColorBrush}" />
                            <Setter TargetName="PART_Arrow" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="PART_ArrowBorder" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource TextBoxFocusColorBrush}" />
                            <Setter TargetName="PART_Arrow" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource InactiveColorBrush}" />
                            <Setter TargetName="PART_Arrow" Property="Fill" Value="{DynamicResource InactiveColorBrush}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=IsDropDownOpen}" Value="True">
                            <Setter TargetName="PART_ArrowBorder" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="PART_Arrow" Property="Fill" Value="{DynamicResource ForegroundPressedColorBrush}" />
                            <Setter TargetName="PART_ArrowBorder" Property="Margin" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    The text box of an editable combo box.
    -->
    <Style x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundColorBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--
    The combo box style.
    -->
    <Style x:Name="FlatComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="support:ComboBoxSupport.MaxDropDownItems" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton" 
                                      Style="{StaticResource ComboBoxToggleButton}" 
                                      Grid.Column="2"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" 
                                          IsHitTestVisible="False"  
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="4,4,24,4"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{StaticResource ComboBoxTextBox}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="4,4,24,4"
                                 Focusable="True"
                                 Background="Transparent"
                                 Foreground="{TemplateBinding Foreground}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               SnapsToDevicePixels="True"
                               Focusable="False"
                               PopupAnimation="Slide">

                            <Grid Name="DropDown"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  UseLayoutRounding="True"
                                  Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <Border x:Name="DropDownBorder"
                                        UseLayoutRounding="True"
                                        Grid.Column="0"
                                        BorderThickness="1"
                                        Background="{DynamicResource ControlColorBrush}"
                                        BorderBrush="{DynamicResource BorderColorBrush}"/>
                                <ScrollViewer Grid.Column="0"
                                              Margin="1">
                                    <StackPanel IsItemsHost="True" 
                                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=ActualHeight}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource InactiveColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="IsOpen" Value="True">
                            <Setter TargetName="DropDownBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Item style for FlatComboBox items. -->
    <Style x:Name="FlatComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="PART_Border" 
                            BorderThickness="1"
                            BorderBrush="Transparent"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Margin="4,2"
                                          SnapsToDevicePixels="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource ControlHoveredColorBrush}"/>
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource InactiveColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>