<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Muses.Wpf.Controls"
                    xmlns:p="clr-namespace:Muses.Wpf.Properties">

    <!--- Defines the WindowButton style used in the title bar. -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Muses.Wpf;component/Styles/Controls.Buttons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="TabButtonStyle" TargetType="{x:Type Button}">
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource AccentLightColorBrush}"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=IsPressed}" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource AccentDarkColorBrush}"  />
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}" Value="False"/>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:CloseableTabItem}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource InactiveColorLightBrush}"  />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid Background="Transparent">
                            <ContentPresenter></ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CloseableTabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CloseableTabItem">
                    <Border Name="Border" SnapsToDevicePixels="True">
                        <DockPanel>
                            <ContentPresenter x:Name="ContentSite"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                DockPanel.Dock="Left"
                                ContentSource="Header"
                                Width="Auto"
                                Margin="10,2"/>
                            <Button x:Name="Close" 
                                TextElement.Foreground="{DynamicResource AccentForegroundColorBrush}"
                                ToolTip="{x:Static p:Resources.Tip_Close}"
                                BorderThickness="0"
                                Background="Transparent"
                                Margin="2,2"
                                HorizontalAlignment="Right"
                                Visibility="Hidden"
                                Style="{StaticResource TabButtonStyle}" 
                                DockPanel.Dock="Right">
                                <Path x:Name="CloseTab" 
                                    SnapsToDevicePixels="True" 
                                    Width="8" 
                                    Height="8" 
                                    Margin="4" 
                                    HorizontalAlignment="Right" 
                                    VerticalAlignment="Center" 
                                    Stretch="Fill" 
                                    Fill="{DynamicResource AccentForegroundColorBrush}" 
                                    Data="F1 M 26.9166,22.1667L 37.9999,33.25L 49.0832,22.1668L 53.8332,26.9168L 42.7499,38L 53.8332,49.0834L 49.0833,53.8334L 37.9999,42.75L 26.9166,53.8334L 22.1666,49.0833L 33.25,38L 22.1667,26.9167L 26.9166,22.1667 Z " />
                            </Button>
                        </DockPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter TargetName="Border" Property="TextElement.Foreground" Value="{DynamicResource AccentForegroundColorBrush}"/>
                            <Setter TargetName="Close" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundColorBrush}"  />
                            <Setter TargetName="Border" Property="TextElement.Foreground" Value="{DynamicResource ForegroundColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="Border">
                            <Setter TargetName="Close" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource InactiveColorBrush}"  />
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="Border" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentHoverColorBrush}" />
                            <Setter TargetName="Border" Property="TextElement.Foreground" Value="{DynamicResource AccentForegroundColorBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Close" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>