<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:support="clr-namespace:Muses.Wpf.Controls.Support"
                    xmlns:controls="clr-namespace:Muses.Wpf.Controls"
                    xmlns:p="clr-namespace:Muses.Wpf.Properties">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Muses.Wpf;component/Resources/Shared.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Muses.Wpf;component/Styles/Controls.ScrollViewer.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Muses.Wpf;component/Styles/Controls.Menu.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlFocusColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="3,3" />
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundColorBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="support:TextBoxSupport.Hint" Value="" />
        <Setter Property="support:TextBoxSupport.SelectAllOnFocus" Value="False" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="{x:Static p:Resources.Menu_Cut}" Command="Cut">
                        <MenuItem.Icon>
                            <controls:IconChromePack Kind="CommandCut"  Style="{DynamicResource MenuItemPathIcon}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources.Menu_Copy}" Command="Copy">
                        <MenuItem.Icon>
                            <controls:IconChromePack Kind="CommandCopy"  Style="{DynamicResource MenuItemPathIcon}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{x:Static p:Resources.Menu_Paste}" Command="Paste">
                        <MenuItem.Icon>
                            <controls:IconChromePack Kind="CommandPaste"  Style="{DynamicResource MenuItemPathIcon}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Name="Container" Background="Transparent">
                        <Border x:Name="PART_Border" 
                                BorderThickness="1"
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"/>

                        <ScrollViewer x:Name="PART_ContentHost"
                                 Foreground="{TemplateBinding Foreground}"/>

                        <TextBlock x:Name="PART_Hint"
                                   Padding="1"
                                   Margin="{TemplateBinding Padding}" 
                                   Text="{Binding Path=(support:TextBoxSupport.Hint), RelativeSource={RelativeSource TemplatedParent}}" 
                                   TextTrimming="CharacterEllipsis"
                                   Foreground="{DynamicResource InactiveColorLightTextBrush}"
                                   IsHitTestVisible="False"
                                   VerticalAlignment="Center"
                                   Visibility="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=Text.IsEmpty, Converter={StaticResource BoolToVisibility}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource TextBoxFocusColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource TextBoxFocusColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Hint" Property="Foreground" Value="{DynamicResource InactiveColorBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource InactiveColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlFocusColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="3,3" />
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundColorBrush}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="support:TextBoxSupport.Hint" Value="" />
        <Setter Property="support:TextBoxSupport.SelectAllOnFocus" Value="True" />
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Header="{x:Static p:Resources.Menu_Paste}" Command="Paste">
                        <MenuItem.Icon>
                            <controls:IconChromePack Kind="CommandPaste" Style="{DynamicResource MenuItemPathIcon}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid Name="Container" Background="Transparent">
                        <Border x:Name="PART_Border" 
                                BorderThickness="1"
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            
                            <ScrollViewer x:Name="PART_ContentHost"
                                 Grid.Column="0"
                                 Padding="1"
                                 Foreground="{TemplateBinding Foreground}"
                                 Background="Transparent"/>

                            <TextBlock x:Name="PART_Hint"
                                   Grid.Column="0"
                                   Padding="1"
                                   Margin="{TemplateBinding Padding}" 
                                   Text="{Binding Path=(support:TextBoxSupport.Hint), RelativeSource={RelativeSource TemplatedParent}}" 
                                   TextTrimming="CharacterEllipsis"
                                   Foreground="{DynamicResource InactiveColorLightTextBrush}"
                                   IsHitTestVisible="False"
                                   VerticalAlignment="Center"
                                   Visibility="Collapsed" />

                            <DockPanel Grid.Column="1">
                                <Grid x:Name="PART_Warning"  
                                      DockPanel.Dock="Right"
                                      Height="{Binding ActualHeight, ElementName=PART_Border}"
                                      Width="{Binding ActualHeight, ElementName=PART_Border}"
                                      Visibility="Collapsed"
                                      ToolTip="{x:Static p:Resources.Tip_CapsLock}">
                                    <controls:IconChromePack Kind="Warning"
                                                             Margin="3"
                                                             SnapsToDevicePixels="True"
                                                             Fill="{DynamicResource VsWarningColorBrush}"
                                                             Stretch="Uniform" />
                                </Grid>
                            </DockPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource TextBoxFocusColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource TextBoxFocusColorBrush}"/>
                        </Trigger>
                        <Trigger Property="support:TextBoxSupport.PasswordLength" Value="0">
                            <Setter Property="Visibility" TargetName="PART_Hint" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Hint" Property="Foreground" Value="{DynamicResource InactiveColorBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource InactiveColorBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="support:TextBoxSupport.ShowCapsLockWarning" Value="True" />
                                <Condition Property="support:TextBoxSupport.CapsLockActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="PART_Warning" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>